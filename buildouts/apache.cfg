[buildout]
parts+=
	loris-source
	eggs-install
	omelette
	cron-script1
	cache-cron
    cache-cron2	
	log-cache-dirs
	loris-conf
	loris-setup
	loris-webapp
	start-script
	script-perms
	apache
	mod-wsgi-install
	apache-wsgi-config
	loris-wsgi
	wsgi-perms
	apache-httpd-config
	compile-kakadu
	copy-apps-libs

[apache]
recipe = hexagonit.recipe.cmmi
url = http://archive.apache.org/dist/httpd/httpd-2.2.26.tar.gz
keep-compile-dir = false
configure-options =
	--prefix=${buildout:directory}/parts/apache
	--enable-mods-shared="all"
	--enable-so
	--enable-cgi
	--enable-info
	--enable-rewrite
	--enable-speling
	--enable-usertrack
	--enable-deflate
	--enable-ssl
	--enable-mime-magic

[mod-wsgi-install]
recipe = hexagonit.recipe.cmmi
keep-compile-dir = false
url = http://modwsgi.googlecode.com/files/mod_wsgi-3.4.tar.gz
configure-options= --with-apxs=${buildout:directory}/parts/apache/bin/apxs --with-python=${buildout:directory}/../../python/2.7.6/bin/python

[apache-wsgi-config]
recipe = collective.recipe.template
input = conf/apache_loris_wsgi.conf
output = ${buildout:directory}/parts/apache/conf/apache_loris_wsgi.conf

[loris-wsgi]
recipe = collective.recipe.template
input = conf/loris2.wsgi
output = ${buildout:directory}/parts/loris/www/loris2.wsgi

[wsgi-perms]
recipe = collective.recipe.cmd
on_install = true
cmds = chmod +x ${buildout:directory}/parts/loris/www/loris2.wsgi

[apache-httpd-config]
recipe = collective.recipe.template
input = conf/httpd.conf
output = ${buildout:directory}/parts/apache/conf/httpd.conf