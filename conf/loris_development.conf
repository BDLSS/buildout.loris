# loris2.conf
#
# This file is parsed by the ConfigObj library:
#
# <http://www.voidspace.org.uk/python/configobj.html> 
#
# ConfigObj uses an ini-like syntax with a few important changes and extensions, 
# which are explained here:
#
# <http://www.voidspace.org.uk/python/configobj.html#config-files>
#
# Note that 'unrepr' mode is used, which means that values are parsed as Python
# datatypes, e.g. strings are in quotes, integers are not, True is used for the 
# boolean value TRUE, False for the boolean value FALSE, and lists are in [] 
# with commas (',') as the separators.
#
# <http://www.voidspace.org.uk/python/configobj.html#unrepr-mode>
#
# String interpolation is disabled.
#
# IMPORTANT: Be sure that Loris (i.e. the user running the application) has at 
# least the permissions in the comment at the end of each line for the 
# directories and files you configure here. It's best if directories already 
# exist.
# 

[loris.Loris]
tmp_dp = '${buildout:directory}/tmp' # r--
www_dp = '${buildout:directory}/src/loris/www' # r-x
run_as_user = '${users:buildout-user}'
run_as_group = '${users:buildout-user}'
default_format = 'jpg'
enable_caching = True
redirect_canonical_image_request = False
# Should 'identifier/' redirect to info.json? This is generally OK, unless your 
# identifier could end with a forward slashe.
redirect_id_slash_to_info = True 

[logging]
log_to = 'file'    # 'console'|'file'
log_level = 'INFO' # 'DEBUG'|'INFO'|'WARNING'|'ERROR'|'CRITICAL'
log_dir = '/var/log/loris' # rw-
max_size = 5242880 # 5 MB
max_backups = 5
format = '%(asctime)s (%(name)s) [%(levelname)s]: %(message)s'

[resolver]
impl = 'SimpleFSResolver'
src_img_root = '${buildout:directory}/var/images' # r--

[img.ImageCache]
cache_dp = '${buildout:directory}/var/cache/loris/img' # rwx
cache_links = '${buildout:directory}/var/cache/loris/links' # rwx

[img_info.InfoCache]
cache_dp = '${buildout:directory}/var/cache/loris/info' # rwx

[transforms.jpg]
src_format = 'jpg'
impl = 'JPG_Transformer'
target_formats = ['jpg','png','gif']

[transforms.tif]
src_format = 'tif'
impl = 'TIF_Transformer'
target_formats = ['jpg','png','gif']

[transforms.jp2]
src_format = 'jp2'
impl = 'JP2_Transformer'
target_formats = 'jpg','png','gif'
tmp_dp = '${buildout:directory}/tmp/jp2' # rwx
kdu_expand = '${buildout:directory}/src/loris/bin/Linux/x86_64/kdu_expandd' # r-x
kdu_libs = '${buildout:directory}/src/loris/lib/Linux/x86_64/' # r--
num_threads = '4' # string!
mkfifo = '/usr/bin/mkfifo' # r-x
map_profile_to_srgb = True
srgb_profile_fp = '/usr/share/color/icc/colord/sRGB.icc' # r--
