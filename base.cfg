[buildout]

parts +=
	eggs-install
	cron-script1
	PIL
	PIL-install
	cache-cron
	log-cache-dirs
	loris-conf
	apache
	mod-wsgi-install
	apache-wsgi-config
	apache-httpd-config	

eggs =
	werkzeug 
	Pillow

extensions =
	mr.developer

extends =
	buildouts/apache.cfg
	versions.cfg

auto-checkout +=
	loris

dollar = $

[eggs-install]
recipe = zc.recipe.egg:eggs
eggs = ${buildout:eggs}

[cron-script1]
recipe = collective.recipe.template
input = conf/cron.txt
output = ${buildout:directory}/bin/cron.txt

[PIL]
recipe = hexagonit.recipe.download
url = http://effbot.org/downloads/Imaging-1.1.7.tar.gz
strip-top-level-dir = true

[PIL-install]
recipe = collective.recipe.cmd
on_install = true
cmds = ${buildout:directory}/bin/python ${buildout:directory}/parts/PIL/setup.py install;

[cache-cron]
recipe = collective.recipe.template
input = conf/loris-cache_clean.sh
output = ${buildout:directory}/src/bin/loris-cache_clean.sh

[log-cache-dirs]
recipe = collective.recipe.cmd
on_install = true
cmds = mkdir -p ${buildout:directory}/var/log/loris; mkdir -p ${buildout:directory}/var/cache/loris/img; mkdir -p ${buildout:directory}/var/cache/loris/links;  mkdir -p ${buildout:directory}/var/cache/loris/info; mkdir -p ${buildout:directory}/var/images; mkdir -p ${buildout:directory}/tmp;

[loris-conf]
recipe = collective.recipe.template
input = conf/loris.conf
output = ${buildout:directory}/src/etc/loris.conf

[sources]
loris = git https://github.com/pulibrary/loris egg=false