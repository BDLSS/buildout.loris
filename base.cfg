[buildout]

extensions =
    buildout.bootstrap
	mr.developer

extends =
	buildouts/apache.cfg
	buildouts/kakadu.cfg
	versions.cfg

parts +=
	loris-source
	eggs-install
	omelette
	cron-script1
	cache-cron
	log-cache-dirs
	loris-conf
	start-script
	script-perms
	apache
	mod-wsgi-install
	apache-wsgi-config
	loris-wsgi
	wsgi-perms
	apache-httpd-config
	compile-kakadu
	copy-apps-libs

eggs =
	werkzeug 
	Pillow
	configobj
	pytest

auto-checkout +=
	tests

dollar = $

show-picked-versions = true
versions = versions

[eggs-install]
recipe = zc.recipe.egg:eggs
eggs = ${buildout:eggs}

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[cron-script1]
recipe = collective.recipe.template
input = conf/cron.txt
output = ${buildout:directory}/bin/cron.txt

[cache-cron]
recipe = collective.recipe.template
input = conf/loris-cache_clean.sh
output = ${buildout:directory}/src/loris/bin/loris-cache_clean.sh

[log-cache-dirs]
recipe = collective.recipe.cmd
on_install = true
cmds = mkdir -p ${buildout:directory}/var/log/loris; mkdir -p ${buildout:directory}/var/cache/loris/img; mkdir -p ${buildout:directory}/var/cache/loris/links;  mkdir -p ${buildout:directory}/var/cache/loris/info; mkdir -p ${buildout:directory}/var/images; mkdir -p ${buildout:directory}/tmp;

[loris-conf]
recipe = collective.recipe.template
input = conf/loris2.conf
output = ${buildout:directory}/parts/loris/etc/loris2.conf

[start-script]
recipe = collective.recipe.template
input = conf/lorisctl
output = ${buildout:directory}/bin/lorisctl

[script-perms]
recipe = collective.recipe.cmd
on_install = true
cmds = chmod a+x ${buildout:directory}/bin/lorisctl

[loris-source]
recipe = gitrecipe
repository = https://github.com/pulibrary/loris.git
rev = tags/2.0.0-beta1

[sources]
tests = git https://github.com/IIIF/image-api.git egg=false