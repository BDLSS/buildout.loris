[buildout]

parts +=
	loris-source
	eggs-install
	cron-script1
#	PIL
#	PIL-install
	cache-cron
	log-cache-dirs
	loris-conf
	start-script
	script-perms
	loris-setup-py
	loris-webapp-py
	loris-transforms-py
	setup-perms
	apache
	mod-wsgi-install
	apache-wsgi-config
	loris-wsgi
	wsgi-perms
	apache-httpd-config
	make-file
	compile-kakadu
	copy-apps-libs
#	loris-install

eggs =
	werkzeug 
	Pillow

extensions =
	mr.developer

extends =
	buildouts/loris.cfg
	buildouts/apache.cfg
	buildouts/kakadu.cfg
	versions.cfg

auto-checkout +=
#	loris

dollar = $

[eggs-install]
recipe = zc.recipe.egg:eggs
eggs = ${buildout:eggs}

[cron-script1]
recipe = collective.recipe.template
input = conf/cron.txt
output = ${buildout:directory}/bin/cron.txt

#[PIL]
#recipe = hexagonit.recipe.download
#url = http://effbot.org/downloads/Imaging-1.1.7.tar.gz
#strip-top-level-dir = true

#[PIL-install]
#recipe = collective.recipe.cmd
#on_install = true
#cmds = ${buildout:directory}/bin/python ${buildout:directory}/parts/PIL/setup.py install;

[cache-cron]
recipe = collective.recipe.template
input = conf/loris-cache_clean.sh
output = ${buildout:directory}/src/loris/bin/loris-cache_clean.sh

[log-cache-dirs]
recipe = collective.recipe.cmd
on_install = true
cmds = mkdir -p ${buildout:directory}/var/log/loris; mkdir -p ${buildout:directory}/var/cache/loris/img; mkdir -p ${buildout:directory}/var/cache/loris/links;  mkdir -p ${buildout:directory}/var/cache/loris/info; mkdir -p ${buildout:directory}/var/images; mkdir -p ${buildout:directory}/tmp;

[loris-conf]
recipe = collective.recipe.template
input = conf/loris_${loris:version}.conf
output = ${buildout:directory}/src/loris/etc/loris.conf

[start-script]
recipe = collective.recipe.template
input = conf/lorisctl
output = ${buildout:directory}/bin/lorisctl

[script-perms]
recipe = collective.recipe.cmd
on_install = true
cmds = chmod a+x ${buildout:directory}/bin/lorisctl

[loris-setup-py]
recipe = collective.recipe.template
input = conf/setup.py
output = ${buildout:directory}/src/loris/setup.py

[loris-webapp-py]
recipe = collective.recipe.template
input = conf/webapp_${loris:version}.py
output = ${buildout:directory}/src/loris/loris/webapp.py

[loris-transforms-py]
recipe = collective.recipe.template
input = conf/transforms_${loris:version}.py
output = ${buildout:directory}/src/loris/loris/transforms.py

[setup-perms]
recipe = collective.recipe.cmd
on_install = true
cmds = chmod a+x ${buildout:directory}/src/loris/setup.py

#[loris-install]
#recipe = collective.recipe.cmd
#on_install = true
#cmds = python ${buildout:directory}/src/loris/setup.py install

[sources]
#loris = git https://github.com/pulibrary/loris egg=false